package onSolomaLessons;
/* Сортировка
время -
сравнение сложности только больше меньше
алгоритмы сортировки использующие только обстрактную операцию сравнения ключей всегда нуждаются ка кминимум в
O(n log n ) сравнениях
Память - второй параметр характеристики алгоритмов. Некоторые из них требуют выделение доп памяти на временное хранение данных
обычно это O(log n) Алгоримы сортировки  не требующие доп память - соритровки на месте (название такое)
Классификация алгоритмов сортировки:
 - устойчивость (равные эл не меняют своего взаимного положения)
 (a1 b1 b2 a2  -> a1 a2 b1 b2  - устойчиво
 (a1 b1 b2 a2  -> a2 a1 b1 b2  - не устойчиво (тк поменялось взамное расположение a1 и a2 - по критерю которому мы сортировали они
 и равны но по другим характеристикам же может и нет, лучше их не менять расположение)
 - Естественность поведения - если некоторые ел уже упорядочны то естественный алгоритм будет в таком случае
 учитвыть это и работать лучше
 (но есть даже и не естественные которым всё равно или даже хуже раотают)
 - использование операции сравнения (алг использующие сравнение эл между собой - основанные на сравнении
 мин трудоёмкость худшего случая - O(n log n )

 ПРостые сортировки O(n^2)
 Сложные (,scnhst)- O(n log(n))
 */

public class One {
}
